ggplot(data = shear, mapping = aes(x = shear, y = mortality, color = year, shape = year))+
geom_point(size = 3)
ggplot(data = shear, mapping = aes(x = shear, y = mortality, color = year, shape = year))+
geom_point(size = 4)
ggplot(data = shear, mapping = aes(x = shear, y = mortality, color = year, shape = year))+
geom_point(size = 4)+
geom_smooth(method = "lm")
ggplot(data = shear, mapping = aes(x = shear, y = mortality, color = year, shape = year))+
geom_point(size = 4)+
geom_smooth(method = "lm")+
geom_jitter()
ggplot(data = shear, mapping = aes(x = shear, y = mortality, color = year, shape = year))+
geom_point(size = 4)+
geom_smooth(method = "lm")+
geom_jitter(size = 4)
?geom_jitter
ggplot(data = shear, mapping = aes(x = shear, y = mortality, color = year, shape = year))+
geom_point(size = 4)+
geom_smooth(method = "lm")+
geom_jitter(size = 4, width = 1, height = 1)
ggplot(data = shear, mapping = aes(x = shear, y = mortality, color = year, shape = year))+
geom_point(size = 4)+
geom_smooth(method = "lm")+
geom_jitter(size = 4, width = 1, height = 3)
ggplot(data = shear, mapping = aes(x = shear, y = mortality, color = year, shape = year))+
geom_point(size = 4)+
geom_smooth(method = "lm")+
geom_jitter(size = 4, width = 3, height = 3)
ggplot(data = shear, mapping = aes(x = shear, y = mortality, color = year, shape = year))+
geom_point(size = 4)+
geom_smooth(method = "lm")+
geom_jitter(size = 4, width = 2, height = 3)
ggplot(data = shear, mapping = aes(x = shear, y = mortality, color = year, shape = year))+
geom_point(size = 4)+
geom_smooth(method = "lm")+
geom_jitter(size = 4, width = 1, height = 3)
ggplot(data = shear, mapping = aes(x = shear, y = mortality))+
geom_point(size = 4)+
geom_smooth(method = "lm")+
geom_jitter(size = 4, width = 1, height = 3)
View(force)
#any of the individual relationships can be a threshold or a probability model.
library(sf)
library(lubridate)
library(tidyverse)
force <- read_csv("pullout_force.csv")
View(force)
#tidy up force. For force, we only have a population of values that successfully broke or pulled out a seedling
#we will take percentiles to determine P(seedling death)
force <- force %>%
select(-c("ID","River", "Easting (m)2","Northing (m)2", "Elevation (m)3")) %>%
filter(Species4 == "P", Type == "Pull test", !is.na(Break5))
names(force)[2] <- "Scour_depth_m"
names(force)[3] <- "Species"
names(force)[9] <- "Pullout_force_N"
names(force)[10] <- "Break"
View(force)
View(force)
#any of the individual relationships can be a threshold or a probability model.
library(sf)
library(lubridate)
library(tidyverse)
#read in hydraulic relationships
shear <- read_csv("shear.csv", skip = 2)
force <- read_csv("pullout_force.csv")
#tidy shear
names(shear)[c(1,4)] <- c("shear", "mortality")
shear$year <- as.factor(shear$year)
ggplot(data = shear, mapping = aes(x = shear, y = mortality, color = year, shape = year))+
geom_point(size = 4)+
geom_smooth(method = "lm")+
geom_jitter(size = 4, width = 1, height = 3)
#any of the individual relationships can be a threshold or a probability model.
library(sf)
library(lubridate)
library(tidyverse)
#read in hydraulic relationships
shear <- read_csv("shear.csv", skip = 2)
View(shear)
#tidy shear
names(shear)[c(1,4)] <- c("shear", "mortality")
shear$year <- as.factor(shear$year)
ggplot(data = shear, mapping = aes(x = shear, y = mortality, color = year, shape = year))+
geom_point(size = 4)+
geom_smooth(method = "lm")+
geom_jitter(size = 4, width = 1, height = 3)
ggplot(data = shear, mapping = aes(x = shear, y = mortality, color = year, shape = year))+
geom_point(size = 4)+
geom_smooth(method = "lm")+
geom_jitter(size = 4, width = 1, height = 3)+
labs(y = "Mortality %", x = "Shear (Pa)")
ggplot(data = shear, mapping = aes(x = shear, y = mortality, color = year, shape = year))+
geom_point(size = 4)+
geom_smooth(method = "lm")+
geom_jitter(size = 4, width = 1, height = 3)+
labs(y = "Mortality (%(", x = "Shear (Pa)")
ggplot(data = shear, mapping = aes(x = shear, y = mortality, color = year, shape = year))+
geom_point(size = 4)+
geom_smooth(method = "lm")+
geom_jitter(size = 4, width = 1, height = 3)+
labs(y = "Mortality (%)", x = "Shear (Pa)")
ggplot(data = shear, mapping = aes(x = shear, y = mortality, color = year, shape = year))+
geom_point(size = 4)+
geom_smooth(method = "lm")+
labs(y = "Mortality (%)", x = "Shear (Pa)")
ggplot(data = shear, mapping = aes(x = shear, y = mortality, color = year, shape = year))+
geom_point(size = 4)+
geom_smooth(method = "lm")+
labs(y = "Mortality (%)", x = "Shear (Pa)")+
theme_bw()
ggplot(data = shear, mapping = aes(x = shear, y = mortality, color = year, shape = year))+
geom_point(size = 4)+
geom_smooth(method = "lm")+
labs(y = "Mortality (%)", x = "Shear (Pa)")+
theme_classic()
#tidy up force. For force, we only have a population of values that successfully broke or pulled out a seedling
#we will take percentiles to determine P(seedling death)
force <- force %>%
select(-c("ID","River", "Easting (m)2","Northing (m)2", "Elevation (m)3")) %>%
filter(Species4 == "P", Type == "Pull test", !is.na(Break5))
#tidy up force. For force, we only have a population of values that successfully broke or pulled out a seedling
#we will take percentiles to determine P(seedling death)
force <- force %>%
dplyr::select(-c("ID","River", "Easting (m)2","Northing (m)2", "Elevation (m)3")) %>%
filter(Species4 == "P", Type == "Pull test", !is.na(Break5))
library(tidyverse)
force <- read_csv("pullout_force.csv")
#tidy up force. For force, we only have a population of values that successfully broke or pulled out a seedling
#we will take percentiles to determine P(seedling death)
force <- force %>%
dplyr::select(-c("ID","River", "Easting (m)2","Northing (m)2", "Elevation (m)3")) %>%
filter(Species4 == "P", Type == "Pull test", !is.na(Break5))
names(force)[2] <- "Scour_depth_m"
names(force)[3] <- "Species"
names(force)[9] <- "Pullout_force_N"
names(force)[10] <- "Break"
force$Scour_depth_m <- as.factor(force$Scour_depth_m)
force$Break <- as.factor(force$Break)
ggplot(data = force, mapping = aes(x = Scour_depth_m, y = Pullout_force_N))+
geom_boxplot(aes(color = Break))
View(force)
ggplot(data = force, mapping = aes(x = Scour_depth_m, y = Pullout_force_N))+
geom_boxplot(aes(color = Break))+
labs(x = "Scour Depth (m)", y = "Force (N)")
ggplot(data = force, mapping = aes(x = Scour_depth_m, y = Pullout_force_N))+
geom_boxplot(aes(color = Break))+
labs(x = "Scour Depth (m)", y = "Force (N)")+
theme_classic()
force$Breakc<-ifelse(force$Break ==0, "slip", "break")
ggplot(data = force, mapping = aes(x = Scour_depth_m, y = Pullout_force_N))+
geom_boxplot(aes(color = Break))+
labs(x = "Scour Depth (m)", y = "Force (N)")+
theme_classic()
ggplot(data = force, mapping = aes(x = Scour_depth_m, y = Pullout_force_N))+
geom_boxplot(aes(color = Breakc))+
labs(x = "Scour Depth (m)", y = "Force (N)")+
theme_classic()
ggplot(data = force, mapping = aes(x = Scour_depth_m, y = Pullout_force_N))+
geom_boxplot(aes(color = Breakc))+
labs(x = "Scour Depth (m)", y = "Force (N)", color = "Type")+
theme_classic()
knitr::opts_chunk$set(echo = TRUE)
x <- seq(1:15)
#any of the individual relationships can be a threshold or a probability model.
library(sf)
library(lubridate)
library(tidyverse)
table <- read_csv("watertable.csv")
library(tidyverse)
table <- read_csv("watertable.csv")
View(table)
#tidy water table
table <- table %>%
filter(species =="sgoodingi")
View(table)
plot(table$`drawdown rate_cm/d`, table$`50 day survival`)
names(table)
names(table)[4:10] <- c("draw_down_cm_day", "50_day_survival", "mean_42_day_survival", "medium_survival_days", "survivor_root_growth_rate_mm_day",
"died_root_growth_rate_mm_day", "mean_depth_to_water_table_m")
ggplot(data = table, mapping = aes(x = draw_down_cm_day, y = 50_day_survival, color = location))+
geom_point()
ggplot(data = table, mapping = aes(x = "draw_down_cm_day", y = "50_day_survival", color = location))+
geom_point()
ggplot(data = table, mapping = aes(x = draw_down_cm_day, y = `50_day_survival, color = location))+
geom_point()
names(table)[4:10] <- c("draw_down_cm_day", "x50_day_survival", "mean_42_day_survival", "medium_survival_days", "survivor_root_growth_rate_mm_day",
"died_root_growth_rate_mm_day", "mean_depth_to_water_table_m")
names(table)[4:10] <- c("draw_down_cm_day", "x50_day_survival", "mean_42_day_survival", "medium_survival_days", "survivor_root_growth_rate_mm_day",
"died_root_growth_rate_mm_day", "mean_depth_to_water_table_m")
ggplot(data = table, mapping = aes(x = draw_down_cm_day, y = 50_day_survival, color = location))+
geom_point()
ggplot(data = table, mapping = aes(x = draw_down_cm_day, y = x50_day_survival, color = location))+
geom_point()
ggplot(data = table, mapping = aes(x = draw_down_cm_day, y = x50_day_survival, color = location))+
geom_point(size = 4)
ggplot(data = table, mapping = aes(x = draw_down_cm_day, y = x50_day_survival, color = location, shape = location))+
geom_point(size = 4)
table <- read_csv("watertable.csv")
#tidy water table
table <- table %>%
filter(species =="sgoodingi", lifestage = "seedling")
#tidy water table
table <- table %>%
filter(species =="sgoodingi", lifestage == "seedling")
names(table)[4:10] <- c("draw_down_cm_day", "x50_day_survival", "mean_42_day_survival", "medium_survival_days", "survivor_root_growth_rate_mm_day",
"died_root_growth_rate_mm_day", "mean_depth_to_water_table_m")
ggplot(data = table, mapping = aes(x = draw_down_cm_day, y = x50_day_survival, color = location, shape = location))+
geom_point(size = 4)
ggplot(data = table, mapping = aes(x = draw_down_cm_day, y = x50_day_survival, color = location, shape = location))+
geom_point(size = 4)+
theme_classic()+
labs(x = "Draw down rate (cm/day)", y = "50 day survival (%)")
ggplot(data = table, mapping = aes(x = draw_down_cm_day, y = x50_day_survival, color = location, shape = location))+
geom_point(size = 4)+
theme_classic()+
labs(x = "Draw down rate (cm/day)", y = "50 day survival (%)", size = 20)
ggplot(data = table, mapping = aes(x = draw_down_cm_day, y = x50_day_survival, color = location, shape = location))+
geom_point(size = 4)+
theme_classic()+
labs(x = "Draw down rate (cm/day)", y = "50 day survival (%)")+
theme(axis.text = element_text(size = 10))
ggplot(data = table, mapping = aes(x = draw_down_cm_day, y = x50_day_survival, color = location, shape = location))+
geom_point(size = 4)+
theme_classic()+
labs(x = "Draw down rate (cm/day)", y = "50 day survival (%)")+
theme(axis.text = element_text(size = 20))
ggplot(data = table, mapping = aes(x = draw_down_cm_day, y = x50_day_survival, color = location, shape = location))+
geom_point(size = 4)+
theme_classic()+
labs(x = "Draw down rate (cm/day)", y = "50 day survival (%)")+
theme(axis.text = element_text(size = 20), axis.title = element_text(size = 20))
ggplot(data = table, mapping = aes(x = draw_down_cm_day, y = x50_day_survival, color = location, shape = location))+
geom_point(size = 5)+
theme_classic()+
labs(x = "Draw down rate (cm/day)", y = "50 day survival (%)")+
theme(axis.text = element_text(size = 20), axis.title = element_text(size = 20))
table <- read_csv("watertable.csv")
#tidy water table
table <- table %>%
filter(species %in% c("sgoodingi", "sexigua"), lifestage == "seedling")
ggplot(data = table, mapping = aes(x = draw_down_cm_day, y = x50_day_survival, color = location, shape = species))+
geom_point(size = 5)+
theme_classic()+
labs(x = "Draw down rate (cm/day)", y = "50 day survival (%)")+
theme(axis.text = element_text(size = 20), axis.title = element_text(size = 20))
names(table)[4:10] <- c("draw_down_cm_day", "x50_day_survival", "mean_42_day_survival", "medium_survival_days", "survivor_root_growth_rate_mm_day",
"died_root_growth_rate_mm_day", "mean_depth_to_water_table_m")
ggplot(data = table, mapping = aes(x = draw_down_cm_day, y = x50_day_survival, color = location, shape = species))+
geom_point(size = 5)+
theme_classic()+
labs(x = "Draw down rate (cm/day)", y = "50 day survival (%)")+
theme(axis.text = element_text(size = 20), axis.title = element_text(size = 20))
table <- read_csv("watertable.csv")
#tidy water table
table <- table %>%
filter(species %in% c("sgoodingi", "sexigua"), lifestage == "seedling", draw_down_cm_day != "na")
#tidy water table
table <- table %>%
filter(species %in% c("sgoodingi", "sexigua"), lifestage == "seedling", drawdown rate_cm/d != "na")
table <- read_csv("watertable.csv")
#tidy water table
names(table)[4:10] <- c("draw_down_cm_day", "x50_day_survival", "mean_42_day_survival", "medium_survival_days", "survivor_root_growth_rate_mm_day",
"died_root_growth_rate_mm_day", "mean_depth_to_water_table_m")
table <- table %>%
filter(species %in% c("sgoodingi", "sexigua"), lifestage == "seedling", draw_down_cm_day != "na")
table <- table %>%
filter(species %in% c("sgoodingi", "sexigua"), lifestage == "seedling", !draw_down_cm_day == "na")
table <- table %>%
filter(species %in% c("sgoodingi", "sexigua"), lifestage == "seedling", !draw_down_cm_day == na)
table <- table %>%
filter(species %in% c("sgoodingi", "sexigua"), lifestage == "seedling", draw_down_cm_day != "na")
table <- table %>%
filter(species %in% c("sgoodingi", "sexigua"), lifestage == "seedling", x50_day_survival != "na")
ggplot(data = table, mapping = aes(x = draw_down_cm_day, y = x50_day_survival, color = location, shape = species))+
geom_point(size = 5)+
theme_classic()+
labs(x = "Draw down rate (cm/day)", y = "50 day survival (%)")+
theme(axis.text = element_text(size = 20), axis.title = element_text(size = 20))
table$x50_day_survival <- as.numeric(table$x50_day_survival)
ggplot(data = table, mapping = aes(x = draw_down_cm_day, y = x50_day_survival, color = location, shape = species))+
geom_point(size = 5)+
theme_classic()+
labs(x = "Draw down rate (cm/day)", y = "50 day survival (%)")+
theme(axis.text = element_text(size = 20), axis.title = element_text(size = 20))
table <- read_csv("watertable.csv")
#tidy water table
names(table)[4:10] <- c("draw_down_cm_day", "x50_day_survival", "mean_42_day_survival", "medium_survival_days", "survivor_root_growth_rate_mm_day",
"died_root_growth_rate_mm_day", "mean_depth_to_water_table_m")
table <- table %>%
filter(species %in% c("sgoodingi", "sexigua"), lifestage == "seedling", x50_day_survival != "na")
table$x50_day_survival <- as.numeric(table$x50_day_survival)
ggplot(data = table, mapping = aes(x = draw_down_cm_day, y = x50_day_survival, color = location, shape = species))+
geom_point(size = 5)+
theme_classic()+
labs(x = "Draw down rate (cm/day)", y = "50 day survival (%)")+
theme(axis.text = element_text(size = 20), axis.title = element_text(size = 20))
#tidy water table
names(table)[4:10] <- c("draw_down_cm_day", "x50_day_survival", "mean_42_day_survival", "medium_survival_days", "survivor_root_growth_rate_mm_day",
"died_root_growth_rate_mm_day", "mean_depth_to_water_table_m")
ble <- read_csv("watertable.csv")
table <- read_csv("watertable.csv")
#tidy water table
names(table)[4:10] <- c("draw_down_cm_day", "x50_day_survival", "mean_42_day_survival", "medium_survival_days", "survivor_root_growth_rate_mm_day",
"died_root_growth_rate_mm_day", "mean_depth_to_water_table_m")
table <- table %>%
filter(species %in% c("sgooddingii", "sexigua"), lifestage == "seedling", x50_day_survival != "na")
table$x50_day_survival <- as.numeric(table$x50_day_survival)
ggplot(data = table, mapping = aes(x = draw_down_cm_day, y = x50_day_survival, color = location, shape = species))+
geom_point(size = 5)+
theme_classic()+
labs(x = "Draw down rate (cm/day)", y = "50 day survival (%)")+
theme(axis.text = element_text(size = 20), axis.title = element_text(size = 20))
force <- read_csv("pullout_force.csv")
force <- force %>%
dplyr::select(-c("ID","River", "Easting (m)2","Northing (m)2", "Elevation (m)3")) %>%
filter(Species4 == "P", Type == "Pull test", !is.na(Break5))
names(force)[2] <- "Scour_depth_m"
names(force)[3] <- "Species"
names(force)[9] <- "Pullout_force_N"
names(force)[10] <- "Break"
force$Scour_depth_m <- as.factor(force$Scour_depth_m)
force$Break <- as.factor(force$Break)
force$Breakc<-ifelse(force$Break ==0, "slip", "break")
ggplot(data = force, mapping = aes(x = Scour_depth_m, y = Pullout_force_N))+
geom_boxplot(aes(color = Breakc))+
labs(x = "Scour Depth (m)", y = "Force (N)", color = "Type")+
theme_classic()
ggplot(data = force, mapping = aes(x = Scour_depth_m, y = Pullout_force_N))+
geom_boxplot(aes(color = Breakc))+
labs(x = "Scour Depth (m)", y = "Force (N)", color = "Type")+
theme_classic()+
theme(axis.text = element_text(size = 20), axis.title = element_text(size = 20))
force <- read_csv("pullout_force.csv")
force <- force %>%
dplyr::select(-c("ID","River", "Easting (m)2","Northing (m)2", "Elevation (m)3")) %>%
filter(Species4 %in% c("P", "S"), Type == "Pull test", !is.na(Break5))
names(force)[2] <- "Scour_depth_m"
names(force)[3] <- "Species"
names(force)[9] <- "Pullout_force_N"
names(force)[10] <- "Break"
force$Scour_depth_m <- as.factor(force$Scour_depth_m)
force$Break <- as.factor(force$Break)
force$Breakc<-ifelse(force$Break ==0, "slip", "break")
ggplot(data = force, mapping = aes(x = Scour_depth_m, y = Pullout_force_N))+
geom_boxplot(aes(color = Breakc))+
labs(x = "Scour Depth (m)", y = "Force (N)", color = "Type")+
theme_classic()+
theme(axis.text = element_text(size = 20), axis.title = element_text(size = 20))
table(force$Species)
mean(c(58, 105))
#read in HEC-RAS output for modeling
depth <- read.csv("hecras.csv")
View(depth)
hydlics <- read.csv("hecras.csv")
View(hydlics)
head(hydlics)
hydlics$Date <- mdy(hydlics$Date)
hydlics$Year <- year(hydlics$Date)
#any of the individual relationships can be a threshold or a probability model.
library(sf)
library(lubridate)
library(tidyverse)
hydlics$Date <- mdy(hydlics$Date)
hydlics$Year <- year(hydlics$Date)
hydlics$Month <- month(hydlics$Date)
wateryr <- function(x){
ifelse(month(x) %in% c(10, 11, 12), year(x)+1, year(x))
}
hydlics$Wateryr <- wateryr(hydlics$Date)
hydlics <- hydlics %>%
gather(key = "Point", value = "Depth", D1:D10)%>%
select(Date, Year, Month, Wateryr, Time, Node, Point, Flow..cfs., Velocity..ft.s., Depth, Shear_Pa, Power_W.m2)
most_consecutive_val = function(vector, val = 1) {
with(rle(vector), max(lengths[values == val]))
}
81*24
24*30
temp <- hydlics %>%
group_by(Node, Point, year) %>%
mutate(
#pre-germ
#depth
dep_pregrm_WY2011_val = most_consecutive_val(vector=abs(diff(which(hydlics$Depth[hydlics$Date == 4]>=3))==1)),
dep_pregrm_WY2011_log = ifelse(dep_pregrm_WY2011_val>=360, TRUE, FALSE))
temp <- hydlics %>%
group_by(Node, Point, Year) %>%
mutate(
#pre-germ
#depth
dep_pregrm_WY2011_val = most_consecutive_val(vector=abs(diff(which(hydlics$Depth[hydlics$Date == 4]>=3))==1)),
dep_pregrm_WY2011_log = ifelse(dep_pregrm_WY2011_val>=360, TRUE, FALSE))
View(temp)
temp <- hydlics %>%
group_by(Node, Point, Year) %>%
mutate(
#pre-germ
#depth
dep_pregrm_WY2011_val = most_consecutive_val(vector=abs(diff(which(hydlics$Depth[hydlics$Month == 4]>=3))==1)),
dep_pregrm_WY2011_log = ifelse(dep_pregrm_WY2011_val>=360, TRUE, FALSE))
#any of the individual relationships can be a threshold or a probability model.
library(sf)
library(lubridate)
library(tidyverse)
#read in hydraulic relationships
shear <- read_csv("shear.csv", skip = 2)
#tidy shear
names(shear)[c(1,4)] <- c("shear", "mortality")
shear$year <- as.factor(shear$year)
ggplot(data = shear, mapping = aes(x = shear, y = mortality, color = year, shape = year))+
geom_point(size = 4)+
geom_smooth(method = "lm")+
labs(y = "Mortality (%)", x = "Shear (Pa)")+
theme_classic()
ggplot(data = shear, mapping = aes(x = shear, y = mortality, color = year, shape = year))+
geom_point(size = 4)+
geom_smooth(method = "lm")+
labs(y = "Mortality (%)", x = "Shear (Pa)")+
theme_classic()+
geom_abline(hintercept = 50, color = "red")
ggplot(data = shear, mapping = aes(x = shear, y = mortality, color = year, shape = year))+
geom_point(size = 4)+
geom_smooth(method = "lm")+
labs(y = "Mortality (%)", x = "Shear (Pa)")+
theme_classic()+
geom_abline(yintercept = 50, color = "red")
ggplot(data = shear, mapping = aes(x = shear, y = mortality, color = year, shape = year))+
geom_point(size = 4)+
geom_smooth(method = "lm")+
labs(y = "Mortality (%)", x = "Shear (Pa)")+
theme_classic()+
geom_abline(yintercept = 50, slope = 0, color = "red")
ggplot(data = shear, mapping = aes(x = shear, y = mortality, color = year, shape = year))+
geom_point(size = 4)+
geom_smooth(method = "lm")+
labs(y = "Mortality (%)", x = "Shear (Pa)")+
theme_classic()+
geom_hline(50)
ggplot(data = shear, mapping = aes(x = shear, y = mortality, color = year, shape = year))+
geom_point(size = 4)+
geom_smooth(method = "lm")+
labs(y = "Mortality (%)", x = "Shear (Pa)")+
theme_classic()+
geom_hline(yintercept = 50)
ggplot(data = shear, mapping = aes(x = shear, y = mortality, color = year, shape = year))+
geom_point(size = 4)+
geom_smooth(method = "lm")+
labs(y = "Mortality (%)", x = "Shear (Pa)")+
theme_classic()+
geom_hline(yintercept = 50, color = "red")
ggplot(data = shear, mapping = aes(x = shear, y = mortality, color = year, shape = year))+
geom_point(size = 4)+
geom_smooth(method = "lm")+
labs(y = "Mortality (%)", x = "Shear (Pa)")+
theme_classic()+
geom_hline(yintercept = 50, color = "red", lwd = 3)
ggplot(data = shear, mapping = aes(x = shear, y = mortality, color = year, shape = year))+
geom_point(size = 4)+
geom_smooth(method = "lm")+
labs(y = "Mortality (%)", x = "Shear (Pa)")+
theme_classic()+
geom_hline(yintercept = 50, color = "red", lwd = 2)
ggplot(data = shear, mapping = aes(x = shear, y = mortality, color = year, shape = year))+
geom_point(size = 4)+
geom_smooth(method = "lm")+
labs(y = "Mortality (%)", x = "Shear (Pa)")+
theme_classic()+
geom_hline(yintercept = 50, color = "red", lwd = 1.5)
ggplot(data = shear, mapping = aes(x = shear, y = mortality, color = year, shape = year))+
geom_point(size = 4)+
geom_smooth(method = "lm")+
labs(y = "Mortality (%)", x = "Shear (Pa)")+
theme_classic()+
geom_hline(yintercept = 50, color = "red", lwd = 1.5)+
theme(axis.text = element_text(size = 20), axis.title = element_text(size = 20))
ggplot(data = shear, mapping = aes(x = shear, y = mortality, color = year, shape = year))+
geom_point(size = 4)+
geom_smooth(method = "lm")+
labs(y = "Mortality (%)", x = "Bed Shear Stress (Pa)")+
theme_classic()+
geom_hline(yintercept = 50, color = "red", lwd = 1.5)+
theme(axis.text = element_text(size = 20), axis.title = element_text(size = 20))
table <- read_csv("watertable.csv")
#tidy water table
names(table)[4:10] <- c("draw_down_cm_day", "x50_day_survival", "mean_42_day_survival", "medium_survival_days", "survivor_root_growth_rate_mm_day",
"died_root_growth_rate_mm_day", "mean_depth_to_water_table_m")
table <- table %>%
filter(species %in% c("sgooddingii", "sexigua"), lifestage == "seedling", x50_day_survival != "na")
table$x50_day_survival <- as.numeric(table$x50_day_survival)
ggplot(data = table, mapping = aes(x = draw_down_cm_day, y = x50_day_survival, color = location, shape = species))+
geom_point(size = 5)+
theme_classic()+
labs(x = "Draw down rate (cm/day)", y = "50 day survival (%)")+
theme(axis.text = element_text(size = 20), axis.title = element_text(size = 20),
legent.title = element_text(size = 20), legend.text = element_text(size = 15))
ggplot(data = table, mapping = aes(x = draw_down_cm_day, y = x50_day_survival, color = location, shape = species))+
geom_point(size = 5)+
theme_classic()+
labs(x = "Draw down rate (cm/day)", y = "50 day survival (%)")+
theme(axis.text = element_text(size = 20), axis.title = element_text(size = 20),
legend.title = element_text(size = 20), legend.text = element_text(size = 15))
ggplot(data = table, mapping = aes(x = draw_down_cm_day, y = x50_day_survival, color = location, shape = species))+
geom_point(size = 5)+
theme_classic()+
labs(x = "Draw down rate (cm/day)", y = "50 day survival (%)")+
theme(axis.text = element_text(size = 20), axis.title = element_text(size = 20),
legend.title = element_text(size = 15), legend.text = element_text(size = 10))
ggplot(data = table, mapping = aes(x = draw_down_cm_day, y = x50_day_survival, color = location, shape = species))+
geom_point(size = 5)+
theme_classic()+
labs(x = "Draw down rate (cm/day)", y = "50 day survival (%)")+
theme(axis.text = element_text(size = 20), axis.title = element_text(size = 20),
legend.title = element_text(size = 15), legend.text = element_text(size = 12))
