theme_classic()+
labs(x = "Draw down rate (cm/day)", y = "50 day survival (%)")+
theme(axis.text = element_text(size = 20), axis.title = element_text(size = 20))
ggplot(data = table, mapping = aes(x = draw_down_cm_day, y = x50_day_survival, color = location, shape = location))+
geom_point(size = 5)+
theme_classic()+
labs(x = "Draw down rate (cm/day)", y = "50 day survival (%)")+
theme(axis.text = element_text(size = 20), axis.title = element_text(size = 20))
table <- read_csv("watertable.csv")
#tidy water table
table <- table %>%
filter(species %in% c("sgoodingi", "sexigua"), lifestage == "seedling")
ggplot(data = table, mapping = aes(x = draw_down_cm_day, y = x50_day_survival, color = location, shape = species))+
geom_point(size = 5)+
theme_classic()+
labs(x = "Draw down rate (cm/day)", y = "50 day survival (%)")+
theme(axis.text = element_text(size = 20), axis.title = element_text(size = 20))
names(table)[4:10] <- c("draw_down_cm_day", "x50_day_survival", "mean_42_day_survival", "medium_survival_days", "survivor_root_growth_rate_mm_day",
"died_root_growth_rate_mm_day", "mean_depth_to_water_table_m")
ggplot(data = table, mapping = aes(x = draw_down_cm_day, y = x50_day_survival, color = location, shape = species))+
geom_point(size = 5)+
theme_classic()+
labs(x = "Draw down rate (cm/day)", y = "50 day survival (%)")+
theme(axis.text = element_text(size = 20), axis.title = element_text(size = 20))
table <- read_csv("watertable.csv")
#tidy water table
table <- table %>%
filter(species %in% c("sgoodingi", "sexigua"), lifestage == "seedling", draw_down_cm_day != "na")
#tidy water table
table <- table %>%
filter(species %in% c("sgoodingi", "sexigua"), lifestage == "seedling", drawdown rate_cm/d != "na")
table <- read_csv("watertable.csv")
#tidy water table
names(table)[4:10] <- c("draw_down_cm_day", "x50_day_survival", "mean_42_day_survival", "medium_survival_days", "survivor_root_growth_rate_mm_day",
"died_root_growth_rate_mm_day", "mean_depth_to_water_table_m")
table <- table %>%
filter(species %in% c("sgoodingi", "sexigua"), lifestage == "seedling", draw_down_cm_day != "na")
table <- table %>%
filter(species %in% c("sgoodingi", "sexigua"), lifestage == "seedling", !draw_down_cm_day == "na")
table <- table %>%
filter(species %in% c("sgoodingi", "sexigua"), lifestage == "seedling", !draw_down_cm_day == na)
table <- table %>%
filter(species %in% c("sgoodingi", "sexigua"), lifestage == "seedling", draw_down_cm_day != "na")
table <- table %>%
filter(species %in% c("sgoodingi", "sexigua"), lifestage == "seedling", x50_day_survival != "na")
ggplot(data = table, mapping = aes(x = draw_down_cm_day, y = x50_day_survival, color = location, shape = species))+
geom_point(size = 5)+
theme_classic()+
labs(x = "Draw down rate (cm/day)", y = "50 day survival (%)")+
theme(axis.text = element_text(size = 20), axis.title = element_text(size = 20))
table$x50_day_survival <- as.numeric(table$x50_day_survival)
ggplot(data = table, mapping = aes(x = draw_down_cm_day, y = x50_day_survival, color = location, shape = species))+
geom_point(size = 5)+
theme_classic()+
labs(x = "Draw down rate (cm/day)", y = "50 day survival (%)")+
theme(axis.text = element_text(size = 20), axis.title = element_text(size = 20))
table <- read_csv("watertable.csv")
#tidy water table
names(table)[4:10] <- c("draw_down_cm_day", "x50_day_survival", "mean_42_day_survival", "medium_survival_days", "survivor_root_growth_rate_mm_day",
"died_root_growth_rate_mm_day", "mean_depth_to_water_table_m")
table <- table %>%
filter(species %in% c("sgoodingi", "sexigua"), lifestage == "seedling", x50_day_survival != "na")
table$x50_day_survival <- as.numeric(table$x50_day_survival)
ggplot(data = table, mapping = aes(x = draw_down_cm_day, y = x50_day_survival, color = location, shape = species))+
geom_point(size = 5)+
theme_classic()+
labs(x = "Draw down rate (cm/day)", y = "50 day survival (%)")+
theme(axis.text = element_text(size = 20), axis.title = element_text(size = 20))
#tidy water table
names(table)[4:10] <- c("draw_down_cm_day", "x50_day_survival", "mean_42_day_survival", "medium_survival_days", "survivor_root_growth_rate_mm_day",
"died_root_growth_rate_mm_day", "mean_depth_to_water_table_m")
ble <- read_csv("watertable.csv")
table <- read_csv("watertable.csv")
#tidy water table
names(table)[4:10] <- c("draw_down_cm_day", "x50_day_survival", "mean_42_day_survival", "medium_survival_days", "survivor_root_growth_rate_mm_day",
"died_root_growth_rate_mm_day", "mean_depth_to_water_table_m")
table <- table %>%
filter(species %in% c("sgooddingii", "sexigua"), lifestage == "seedling", x50_day_survival != "na")
table$x50_day_survival <- as.numeric(table$x50_day_survival)
ggplot(data = table, mapping = aes(x = draw_down_cm_day, y = x50_day_survival, color = location, shape = species))+
geom_point(size = 5)+
theme_classic()+
labs(x = "Draw down rate (cm/day)", y = "50 day survival (%)")+
theme(axis.text = element_text(size = 20), axis.title = element_text(size = 20))
force <- read_csv("pullout_force.csv")
force <- force %>%
dplyr::select(-c("ID","River", "Easting (m)2","Northing (m)2", "Elevation (m)3")) %>%
filter(Species4 == "P", Type == "Pull test", !is.na(Break5))
names(force)[2] <- "Scour_depth_m"
names(force)[3] <- "Species"
names(force)[9] <- "Pullout_force_N"
names(force)[10] <- "Break"
force$Scour_depth_m <- as.factor(force$Scour_depth_m)
force$Break <- as.factor(force$Break)
force$Breakc<-ifelse(force$Break ==0, "slip", "break")
ggplot(data = force, mapping = aes(x = Scour_depth_m, y = Pullout_force_N))+
geom_boxplot(aes(color = Breakc))+
labs(x = "Scour Depth (m)", y = "Force (N)", color = "Type")+
theme_classic()
ggplot(data = force, mapping = aes(x = Scour_depth_m, y = Pullout_force_N))+
geom_boxplot(aes(color = Breakc))+
labs(x = "Scour Depth (m)", y = "Force (N)", color = "Type")+
theme_classic()+
theme(axis.text = element_text(size = 20), axis.title = element_text(size = 20))
force <- read_csv("pullout_force.csv")
force <- force %>%
dplyr::select(-c("ID","River", "Easting (m)2","Northing (m)2", "Elevation (m)3")) %>%
filter(Species4 %in% c("P", "S"), Type == "Pull test", !is.na(Break5))
names(force)[2] <- "Scour_depth_m"
names(force)[3] <- "Species"
names(force)[9] <- "Pullout_force_N"
names(force)[10] <- "Break"
force$Scour_depth_m <- as.factor(force$Scour_depth_m)
force$Break <- as.factor(force$Break)
force$Breakc<-ifelse(force$Break ==0, "slip", "break")
ggplot(data = force, mapping = aes(x = Scour_depth_m, y = Pullout_force_N))+
geom_boxplot(aes(color = Breakc))+
labs(x = "Scour Depth (m)", y = "Force (N)", color = "Type")+
theme_classic()+
theme(axis.text = element_text(size = 20), axis.title = element_text(size = 20))
table(force$Species)
mean(c(58, 105))
#read in HEC-RAS output for modeling
depth <- read.csv("hecras.csv")
View(depth)
hydlics <- read.csv("hecras.csv")
View(hydlics)
head(hydlics)
hydlics$Date <- mdy(hydlics$Date)
hydlics$Year <- year(hydlics$Date)
#any of the individual relationships can be a threshold or a probability model.
library(sf)
library(lubridate)
library(tidyverse)
hydlics$Date <- mdy(hydlics$Date)
hydlics$Year <- year(hydlics$Date)
hydlics$Month <- month(hydlics$Date)
wateryr <- function(x){
ifelse(month(x) %in% c(10, 11, 12), year(x)+1, year(x))
}
hydlics$Wateryr <- wateryr(hydlics$Date)
hydlics <- hydlics %>%
gather(key = "Point", value = "Depth", D1:D10)%>%
select(Date, Year, Month, Wateryr, Time, Node, Point, Flow..cfs., Velocity..ft.s., Depth, Shear_Pa, Power_W.m2)
most_consecutive_val = function(vector, val = 1) {
with(rle(vector), max(lengths[values == val]))
}
81*24
24*30
temp <- hydlics %>%
group_by(Node, Point, year) %>%
mutate(
#pre-germ
#depth
dep_pregrm_WY2011_val = most_consecutive_val(vector=abs(diff(which(hydlics$Depth[hydlics$Date == 4]>=3))==1)),
dep_pregrm_WY2011_log = ifelse(dep_pregrm_WY2011_val>=360, TRUE, FALSE))
temp <- hydlics %>%
group_by(Node, Point, Year) %>%
mutate(
#pre-germ
#depth
dep_pregrm_WY2011_val = most_consecutive_val(vector=abs(diff(which(hydlics$Depth[hydlics$Date == 4]>=3))==1)),
dep_pregrm_WY2011_log = ifelse(dep_pregrm_WY2011_val>=360, TRUE, FALSE))
View(temp)
temp <- hydlics %>%
group_by(Node, Point, Year) %>%
mutate(
#pre-germ
#depth
dep_pregrm_WY2011_val = most_consecutive_val(vector=abs(diff(which(hydlics$Depth[hydlics$Month == 4]>=3))==1)),
dep_pregrm_WY2011_log = ifelse(dep_pregrm_WY2011_val>=360, TRUE, FALSE))
#any of the individual relationships can be a threshold or a probability model.
library(sf)
library(lubridate)
library(tidyverse)
#read in hydraulic relationships
shear <- read_csv("shear.csv", skip = 2)
#tidy shear
names(shear)[c(1,4)] <- c("shear", "mortality")
shear$year <- as.factor(shear$year)
ggplot(data = shear, mapping = aes(x = shear, y = mortality, color = year, shape = year))+
geom_point(size = 4)+
geom_smooth(method = "lm")+
labs(y = "Mortality (%)", x = "Shear (Pa)")+
theme_classic()
ggplot(data = shear, mapping = aes(x = shear, y = mortality, color = year, shape = year))+
geom_point(size = 4)+
geom_smooth(method = "lm")+
labs(y = "Mortality (%)", x = "Shear (Pa)")+
theme_classic()+
geom_abline(hintercept = 50, color = "red")
ggplot(data = shear, mapping = aes(x = shear, y = mortality, color = year, shape = year))+
geom_point(size = 4)+
geom_smooth(method = "lm")+
labs(y = "Mortality (%)", x = "Shear (Pa)")+
theme_classic()+
geom_abline(yintercept = 50, color = "red")
ggplot(data = shear, mapping = aes(x = shear, y = mortality, color = year, shape = year))+
geom_point(size = 4)+
geom_smooth(method = "lm")+
labs(y = "Mortality (%)", x = "Shear (Pa)")+
theme_classic()+
geom_abline(yintercept = 50, slope = 0, color = "red")
ggplot(data = shear, mapping = aes(x = shear, y = mortality, color = year, shape = year))+
geom_point(size = 4)+
geom_smooth(method = "lm")+
labs(y = "Mortality (%)", x = "Shear (Pa)")+
theme_classic()+
geom_hline(50)
ggplot(data = shear, mapping = aes(x = shear, y = mortality, color = year, shape = year))+
geom_point(size = 4)+
geom_smooth(method = "lm")+
labs(y = "Mortality (%)", x = "Shear (Pa)")+
theme_classic()+
geom_hline(yintercept = 50)
ggplot(data = shear, mapping = aes(x = shear, y = mortality, color = year, shape = year))+
geom_point(size = 4)+
geom_smooth(method = "lm")+
labs(y = "Mortality (%)", x = "Shear (Pa)")+
theme_classic()+
geom_hline(yintercept = 50, color = "red")
ggplot(data = shear, mapping = aes(x = shear, y = mortality, color = year, shape = year))+
geom_point(size = 4)+
geom_smooth(method = "lm")+
labs(y = "Mortality (%)", x = "Shear (Pa)")+
theme_classic()+
geom_hline(yintercept = 50, color = "red", lwd = 3)
ggplot(data = shear, mapping = aes(x = shear, y = mortality, color = year, shape = year))+
geom_point(size = 4)+
geom_smooth(method = "lm")+
labs(y = "Mortality (%)", x = "Shear (Pa)")+
theme_classic()+
geom_hline(yintercept = 50, color = "red", lwd = 2)
ggplot(data = shear, mapping = aes(x = shear, y = mortality, color = year, shape = year))+
geom_point(size = 4)+
geom_smooth(method = "lm")+
labs(y = "Mortality (%)", x = "Shear (Pa)")+
theme_classic()+
geom_hline(yintercept = 50, color = "red", lwd = 1.5)
ggplot(data = shear, mapping = aes(x = shear, y = mortality, color = year, shape = year))+
geom_point(size = 4)+
geom_smooth(method = "lm")+
labs(y = "Mortality (%)", x = "Shear (Pa)")+
theme_classic()+
geom_hline(yintercept = 50, color = "red", lwd = 1.5)+
theme(axis.text = element_text(size = 20), axis.title = element_text(size = 20))
ggplot(data = shear, mapping = aes(x = shear, y = mortality, color = year, shape = year))+
geom_point(size = 4)+
geom_smooth(method = "lm")+
labs(y = "Mortality (%)", x = "Bed Shear Stress (Pa)")+
theme_classic()+
geom_hline(yintercept = 50, color = "red", lwd = 1.5)+
theme(axis.text = element_text(size = 20), axis.title = element_text(size = 20))
table <- read_csv("watertable.csv")
#tidy water table
names(table)[4:10] <- c("draw_down_cm_day", "x50_day_survival", "mean_42_day_survival", "medium_survival_days", "survivor_root_growth_rate_mm_day",
"died_root_growth_rate_mm_day", "mean_depth_to_water_table_m")
table <- table %>%
filter(species %in% c("sgooddingii", "sexigua"), lifestage == "seedling", x50_day_survival != "na")
table$x50_day_survival <- as.numeric(table$x50_day_survival)
ggplot(data = table, mapping = aes(x = draw_down_cm_day, y = x50_day_survival, color = location, shape = species))+
geom_point(size = 5)+
theme_classic()+
labs(x = "Draw down rate (cm/day)", y = "50 day survival (%)")+
theme(axis.text = element_text(size = 20), axis.title = element_text(size = 20),
legent.title = element_text(size = 20), legend.text = element_text(size = 15))
ggplot(data = table, mapping = aes(x = draw_down_cm_day, y = x50_day_survival, color = location, shape = species))+
geom_point(size = 5)+
theme_classic()+
labs(x = "Draw down rate (cm/day)", y = "50 day survival (%)")+
theme(axis.text = element_text(size = 20), axis.title = element_text(size = 20),
legend.title = element_text(size = 20), legend.text = element_text(size = 15))
ggplot(data = table, mapping = aes(x = draw_down_cm_day, y = x50_day_survival, color = location, shape = species))+
geom_point(size = 5)+
theme_classic()+
labs(x = "Draw down rate (cm/day)", y = "50 day survival (%)")+
theme(axis.text = element_text(size = 20), axis.title = element_text(size = 20),
legend.title = element_text(size = 15), legend.text = element_text(size = 10))
ggplot(data = table, mapping = aes(x = draw_down_cm_day, y = x50_day_survival, color = location, shape = species))+
geom_point(size = 5)+
theme_classic()+
labs(x = "Draw down rate (cm/day)", y = "50 day survival (%)")+
theme(axis.text = element_text(size = 20), axis.title = element_text(size = 20),
legend.title = element_text(size = 15), legend.text = element_text(size = 12))
hydlics <- read.csv("hecras.csv")
hydlics$Date <- mdy(hydlics$Date)
hydlics$Year <- year(hydlics$Date)
hydlics$Month <- month(hydlics$Date)
wateryr <- function(x){
ifelse(month(x) %in% c(10, 11, 12), year(x)+1, year(x))
}
library(lubridate)
library(tidyverse)
hydlics$Date <- mdy(hydlics$Date)
hydlics$Year <- year(hydlics$Date)
hydlics$Month <- month(hydlics$Date)
wateryr <- function(x){
ifelse(month(x) %in% c(10, 11, 12), year(x)+1, year(x))
}
hydlics$Wateryr <- wateryr(hydlics$Date)
hydlics <- hydlics %>%
gather(key = "DepthPoint", value = "Depth", D1:D10)%>%
gather(key = "VelocityPoint", value = "Velocity", V1:V3) %>%
gather(key = "ShearPoint", value = "Shear", S1:S3) %>%
gather(key= "watabPoint", value = "TableDepth", W1:W3) %>%
gather(key = "PowerPoint", value = "Power", P2:P3) %>%
select(Date, Year, Month, Wateryr, Time, Node, DepthPoint, VelocityPoint, ShearPoint, PowerPoint, watabPoint, Flow..cfs., Depth, Shear, Velocity, Power, TableDepth)
?save
save(hydlics, file = "hydlics.RData", compress = "xz")
load("hydlics.RData")
names(hydlics)
depth_germ <-  function (x) {
return (
(1.5*10^-7)*(x^3)-
(1.0*10^-4)*(x^2)+
(0.03*x)-
(1.28)
)
}
#test
x <- 75
depth_germ(x)
#test
x <- 0
depth_germ(x)
#test
x <- 185
depth_germ(x)
#test
x <- 400
depth_germ(x)
names(hydlics)
unique(hydlics$Year)
i <- 2010
temp <- hydlics %>%
filter(year %in% i) %>%
group_by(DepthPoint) %>%
summarize(Greater_then_5 = sum(Depth>5))
temp <- hydlics %>%
filter(year %in% i) %>%
group_by(DepthPoint) %>%
summarize("Greater_then_5" = sum(Depth>5))
85*24
280*24
temp <- hydlics %>%
filter(year %in% i) %>%
group_by(DepthPoint) %>%
mutate(pre_germ_depth = most_consecutive_val(vector=abs(diff(which(temp$Depth >=5))==1)),
dep_pregrm_depth2 = ifelse(pre_germ_depth>=2040 & pre_germ_depth <= 6720, TRUE, FALSE)))
temp <- hydlics %>%
filter(year %in% i) %>%
group_by(DepthPoint) %>%
mutate(pre_germ_depth = most_consecutive_val(vector=abs(diff(which(temp$Depth >=5))==1)),
dep_pregrm_depth2 = ifelse(pre_germ_depth>=2040 & pre_germ_depth <= 6720, TRUE, FALSE))
temp <- hydlics %>%
filter(Year %in% i) %>%
group_by(DepthPoint) %>%
mutate(pre_germ_depth = most_consecutive_val(vector=abs(diff(which(temp$Depth >=5))==1)),
dep_pregrm_depth2 = ifelse(pre_germ_depth>=2040 & pre_germ_depth <= 6720, TRUE, FALSE))
most_consecutive_val = function(vector, val = 1) {
with(rle(vector), max(lengths[values == val]))
}
temp <- hydlics %>%
filter(Year %in% i) %>%
group_by(DepthPoint) %>%
mutate(pre_germ_depth = most_consecutive_val(vector=abs(diff(which(temp$Depth >=5))==1)),
dep_pregrm_depth2 = ifelse(pre_germ_depth>=2040 & pre_germ_depth <= 6720, TRUE, FALSE))
temp <- hydlics %>%
filter(Year %in% i) %>%
group_by(DepthPoint) %>%
mutate(pre_germ_depth = most_consecutive_val(vector=abs(diff(which(Depth >=5))==1)),
dep_pregrm_depth2 = ifelse(pre_germ_depth>=2040 & pre_germ_depth <= 6720, TRUE, FALSE))
View(temp)
load("hydlics.RData")
test_dat <- hydlics[1:30,]
View(test_dat)
View(hydlics)
#thresholds
depth_germ_cm <- 5
depth_germ_low_duration_days <-  85
depth_germ_high_duration_days <- 280
temp <- hydlics %>%
group_by(year, DepthPoint) %>%
mutate(germ_depth_suitability = most_consecutive_val(vector=abs(diff(which(Depth >= depth_germ_cm))==1)),
germ_depth_suitability2 = ifelse(germ_depth_suitability >= depth_germ_low_duration_days*24 & germ_depth_suitability <= depth_germ_high_duration_days*24, TRUE, FALSE))
library(tidyverse)
temp <- h
temp <- hydlics %>%
group_by(year, DepthPoint) %>%
mutate(germ_depth_suitability = most_consecutive_val(vector=abs(diff(which(Depth >= depth_germ_cm))==1)),
germ_depth_suitability2 = ifelse(germ_depth_suitability >= depth_germ_low_duration_days*24 & germ_depth_suitability <= depth_germ_high_duration_days*24, TRUE, FALSE))
names(hydlics)
temp <- hydlics %>%
group_by(Year, DepthPoint) %>%
mutate(germ_depth_suitability = most_consecutive_val(vector=abs(diff(which(Depth >= depth_germ_cm))==1)),
germ_depth_suitability2 = ifelse(germ_depth_suitability >= depth_germ_low_duration_days*24 & germ_depth_suitability <= depth_germ_high_duration_days*24, TRUE, FALSE))
most_consecutive_val = function(vector, val = 1) {
with(rle(vector), max(lengths[values == val]))
}
temp <- hydlics %>%
group_by(Year, DepthPoint) %>%
mutate(germ_depth_suitability = most_consecutive_val(vector=abs(diff(which(Depth >= depth_germ_cm))==1)),
germ_depth_suitability2 = ifelse(germ_depth_suitability >= depth_germ_low_duration_days*24 & germ_depth_suitability <= depth_germ_high_duration_days*24, TRUE, FALSE))
head(test)
head(temp)
hydlics$Depth[hydlics$Year==2012,] <- 40
hydlics$Depth[hydlics$Year==2012] <- 40
temp <- hydlics %>%
group_by(Year, DepthPoint) %>%
mutate(germ_depth_suitability = most_consecutive_val(vector=abs(diff(which(Depth >= depth_germ_cm))==1)),
germ_depth_suitability2 = ifelse(germ_depth_suitability >= depth_germ_low_duration_days*24 & germ_depth_suitability <= depth_germ_high_duration_days*24, TRUE, FALSE))
table(temp$germ_depth_suitability2)
table(hydlics$Depth)
hydlics <- hydlics %>%
filter(year == 2010)
hydlics <- hydlics %>%
filter(Year == 2010)
rm(temp, test_dat)
hydlics <- hydlics %>%
filter(Year == 2010, DepthPoint == "D1")
View(hydlics)
hydlics <- hydlics %>%
filter(Year == 2010, DepthPoint == "D1", VelocityPoint == "V1")
hydlics <- hydlics %>%
filter(Year == 2010, DepthPoint == "D1", VelocityPoint == "V1", ShearPoint == "S1", PowerPoint == "P1")
hydlics <- hydlics %>%
filter(Year == 2010, DepthPoint == "D1", ShearPoint == "S1")
load("hydlics.RData")
hydlics <- hydlics %>%
filter(Year == 2010, DepthPoint == "D1", ShearPoint == "S1")
temp <- hydlics %>%
mutate(germ_depth_suitability = most_consecutive_val(vector=abs(diff(which(Depth >= depth_germ_cm))==1)),
germ_depth_suitability2 = ifelse(germ_depth_suitability >= depth_germ_low_duration_days*24 & germ_depth_suitability <= depth_germ_high_duration_days*24, TRUE, FALSE))
View(temp)
habitat_suitability <-
data.frame(
"year" = temp$Year,
"node" = temp$DepthPoint,
"lifestage" = "germination",
"variable" = "depth",
"suitability" = ifelse(germ_depth_suitability >= depth_germ_low_duration_days*24 & germ_depth_suitability <= depth_germ_high_duration_days*24, TRUE, FALSE)
)
temp <- hydlics %>%
mutate(germ_depth_suitability = most_consecutive_val(vector=abs(diff(which(Depth >= depth_germ_cm))==1)))
habitat_suitability <-
data.frame(
"year" = temp$Year,
"node" = temp$DepthPoint,
"lifestage" = "germination",
"variable" = "depth",
"suitability" = ifelse(temp$germ_depth_suitability >= depth_germ_low_duration_days*24 & temp$germ_depth_suitability <= depth_germ_high_duration_days*24, TRUE, FALSE)
)
unique(
habitat_suitability <-
data.frame(
"year" = temp$Year,
"node" = temp$DepthPoint,
"lifestage" = "germination",
"variable" = "depth",
"suitability" = ifelse(temp$germ_depth_suitability >= depth_germ_low_duration_days*24 & temp$germ_depth_suitability <= depth_germ_high_duration_days*24, TRUE, FALSE)
)
)
habitat_suitability <-
unique(data.frame(
"year" = temp$Year,
"node" = temp$DepthPoint,
"lifestage" = "germination",
"variable" = "depth",
"suitability" = ifelse(temp$germ_depth_suitability >= depth_germ_low_duration_days*24 & temp$germ_depth_suitability <= depth_germ_high_duration_days*24, TRUE, FALSE)
))
View(habitat_suitability)
load("depth_seedling_mod.rda")
summary(depth_seedling_mod)
temp <- hydlics %>%
mutate(seedling_depth_suitability = predict(depth_seedling_mod, newdata = hydlics$Depth)) %>%
unique()
hydlics <- read.csv("hecras.csv")
hydlics$Date <- mdy(hydlics$Date)
hydlics$Year <- year(hydlics$Date)
library(lubridate)
hydlics$Date <- mdy(hydlics$Date)
hydlics$Year <- year(hydlics$Date)
hydlics$Month <- month(hydlics$Date)
wateryr <- function(x){
ifelse(month(x) %in% c(10, 11, 12), year(x)+1, year(x))
}
hydlics$Wateryr <- wateryr(hydlics$Date)
hydlics <- hydlics %>%
gather(key = "DepthPoint", value = "depth_cm", D1:D10)%>%
gather(key = "VelocityPoint", value = "velocity_m_s", V1:V3) %>%
gather(key = "ShearPoint", value = "shear_pa", S1:S3) %>%
gather(key= "watabPoint", value = "TableDepth", W1:W3) %>%
gather(key = "PowerPoint", value = "power", P2:P3) %>%
select(Date, Year, Month, Wateryr, Time, Node, DepthPoint, VelocityPoint, ShearPoint, PowerPoint, watabPoint, Flow..cfs., Depth, Shear, Velocity, Power, TableDepth)
hydlics <- hydlics %>%
gather(key = "DepthPoint", value = "depth_cm", D1:D10)%>%
gather(key = "VelocityPoint", value = "velocity_m_s", V1:V3) %>%
gather(key = "ShearPoint", value = "shear_pa", S1:S3) %>%
gather(key= "watabPoint", value = "TableDepth", W1:W3) %>%
gather(key = "PowerPoint", value = "power", P2:P3) %>%
select(Date, Year, Month, Wateryr, Time, Node, DepthPoint, VelocityPoint, ShearPoint, PowerPoint, watabPoint, Flow..cfs., depth_cm, shear_pa, velocity_m_s, power, TableDepth)
save(hydlics, file = "hydlics.RData", compress = "xz")
load("hydlics.RData")
hydlics <- hydlics %>%
filter(Year == 2010, DepthPoint == "D1", ShearPoint == "S1")
temp <- hydlics %>%
mutate(seedling_depth_suitability = predict(depth_seedling_mod, newdata = hydlics)) %>%
unique()
View(temp)
temp <- hydlics %>%
mutate(seedling_depth_mortality_perc = predict(depth_seedling_mod, newdata = hydlics)) %>%
unique()
